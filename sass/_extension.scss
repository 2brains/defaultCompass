@charset "utf-8";
// ============================================================
// extension
// ============================================================
// ----------------------------------------------------------------------
// 画像周り
// ----------------------------------------------------------------------
$imgWidth: ();
$imgHeight: ();

@mixin background-retina($img,$widthFixed : true,$value : "0 0 no-repeat") {
	$imgList : ();
	$widthHeightList : ();
	$width : ();
	$height : ();
	$imgWidth: ();
	$imgHeight: ();

	@each $i in $img {
		$comma : if(index($img,$i) == length($img),'',',');
		$width: round(image-width($i)/2);
		$height: round(image-height($i)/2);
		
		$imgList: append($imgList, image-url($i) + ' ' + nth($value,index($img,$i)) + $comma);
		$widthHeightList: append($widthHeightList, unquote($width + ' ' + $height) + $comma);
		
		$imgWidth: append($imgWidth, $width);
		$imgHeight:  append($imgHeight, $height);
	}
	background: $imgList;
	@if $widthFixed and length($img) < 2 {
		text-indent: -9999px;
		overflow: hidden;
		width: $width;
		height: $height;
		@include background-size(100% 100%);
	}
	@else {
		@include background-size($widthHeightList);
	}
}

//画像の幅をとってきてくれるisRetinaがtrueの場合は2で割った数を返す
@function image-info($img,$name,$isRetina: false) {
	$width : ();
	$height : ();
	$imgWidth: ();
	$imgHeight: ();
	@each $i in $img {
		$width: if($isRetina,round(image-width($i)/2),image-width($i));
		$height: if($isRetina,round(image-height($i)/2),image-height($i));
		
		$imgWidth: append($imgWidth, $width);
		$imgHeight:  append($imgHeight, $height);
	}
	
	@return if($name == 'width',$imgWidth,$imgHeight)
}

// ----------------------------------------------------------------------
// sprite
// ----------------------------------------------------------------------
@mixin spriteInfo2($map, $sprite-names,$retina : true,$doubleClass : true) {
	$widthHeightList : ();
	$imgWidth: ();
	$imgHeight: ();
	$bgPosition : ();
	
	@each $name in $sprite-names {
		$comma : if(index($sprite-names,$name) == length($sprite-names),'',',');
		$width : nth(spriteSize($map,$name,$retina),1);
		$height : nth(spriteSize($map,$name,$retina),2);
			
		$widthHeightList: append($widthHeightList, unquote($width + ' ' + $height) + $comma);
		
		$imgWidth: append($imgWidth, $width);
		$imgHeight:  append($imgHeight, $height);
		$bgPosition:  append($bgPosition, unquote(spritePosition($map,$name,$retina) + $comma));
	}

	background-image: image-url(sprite-path($map), false, false);
	@include background-size($widthHeightList);
	background-position: $bgPosition;
	
	@if(length($sprite-names) < 2){
		width: nth(spriteSize($map,$sprite-names,$retina),3);
		height: nth(spriteSize($map,$sprite-names,$retina),4);
	}
}

@mixin spriteInfo($map, $name,$retina : true,$doubleClass : true) {
	background-image: image-url(sprite-path($map), false, false);
	@include background-size(nth(spriteSize($map,$name,$retina),1) nth(spriteSize($map,$name,$retina),2));
	background-position: spritePosition($map,$name,$retina);
	width: nth(spriteSize($map,$name,$retina),3);
	height: nth(spriteSize($map,$name,$retina),4);
}

@function spriteSize($map, $name,$retina : true) {
	$retinaSuport: if($retina, 2, 1);
	$map : nth($map,1);
	$spriteWidth: round(image-width(sprite-path($map)) / $retinaSuport);
	$spriteHeight: round(image-height(sprite-path($map)) / $retinaSuport);

	$xpos: round(nth(sprite-position($map, $name), 1) / $retinaSuport);
	$ypos: round(nth(sprite-position($map, $name), 2) / $retinaSuport);
	$imgWidth: round(image-width(sprite-file($map, $name)) / $retinaSuport);
	$imgHeight: round(image-height(sprite-file($map, $name)) / $retinaSuport);
	
	@return ($spriteWidth,$spriteHeight,$imgWidth,$imgHeight);
}

@function spritePosition($map, $name,$retina : true) {
	$retinaSuport: if($retina, 2, 1);
	$map : nth($map,1);

	$xpos: round(nth(sprite-position($map, $name), 1) / $retinaSuport);
	$ypos: round(nth(sprite-position($map, $name), 2) / $retinaSuport);
	
	@return $xpos $ypos;
}

// ----------------------------------------------------------------------
// css3
// ----------------------------------------------------------------------
// 最大高さ min-height
@mixin min_height($value : 1%) {
	min-height: $value;
	@if $legacy-support-for-ie6 {
	_height: $value;
	}
}

// IE6,IE7用 inline-block
@mixin inline-block {
	display: inline-block;
	@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
		*display: inline;
		*zoom: 1;
	}
}

// 同じテキストシャドウ 繰り返し
$text-shadowList: ' ';
@mixin text-shadow-repeat($value : 0 0 1px rgba(0,0,0,0.3),$num : 1) {
	$text-shadowList : $value;
	@for $i from 1 through $num - 1 {
		$text-shadowList : unquote($text-shadowList + "," + $value);
	}
	text-shadow: $text-shadowList;
}

// 同じボックスシャドウ 繰り返し
$box-shadowList: ' ';
@mixin box-shadow-repeat($value : 0 0 1px rgba(0,0,0,0.3),$num : 1) {
	$box-shadowList : $value;
	@for $i from 1 through $num - 1 {
		$box-shadowList : unquote($box-shadowList + "," + $value);
	}
	box-shadow: $box-shadowList;
}

// ----------------------------------------------------------------------
// html5
// ----------------------------------------------------------------------
@function s($value) {
	@if $html5 {
		@return $value
	}
	@else if $value == header or $value == footer {
		@return unquote("div#" + $value)
	}
	@else {
		@return unquote("div." + $value)
	}
}

// ----------------------------------------------------------------------
// font-size
// ----------------------------------------------------------------------
$fontSizeDefault: 13;
$fontSizefz: ' ';
@function fz($size) {
	$fontSizefz: $size / $fontSizeDefault;
	@return $fontSizefz * 100#{"%"};
}

@function fs($size, $context, $unit:em){
	@if $unit == '%' {
		@return #{$size/$context*100}#{$unit};
	} @else {
		@return #{$size/$context}#{$unit};
	}
}

// ----------------------------------------------------------------------
// clearfix
// ----------------------------------------------------------------------
@mixin clearfix() {
/*----------------------------------------
	clearfix
----------------------------------------*/
.clearfix {
	@if $legacy-support-for-ie7 {
	min-height: 1px;
	}
	@if $legacy-support-for-ie6 {
	_height: 1%;
	}
	&:after {
		content: ".";
		display: block;
		clear: both;
		height: 0;
		visibility: hidden;
	}
}
}